/* Copyright (c) 2014, The Linux Foundation. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *  * Neither the name of The Linux Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
 * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*---------------------------------------------------------------------------
 * This file is autogenerated file using gcdb parser. Please do not edit it.
 * Update input XML file to add a new entry or update variable in this file
 * VERSION = "1.0"
 *---------------------------------------------------------------------------*/

#ifndef _PANEL_HX8394D_P800_VIDEO_H_
#define _PANEL_HX8394D_P800_VIDEO_H_
/*---------------------------------------------------------------------------*/
/* HEADER files                                                              */
/*---------------------------------------------------------------------------*/
#include "panel.h"

/*---------------------------------------------------------------------------*/
/* Panel configuration                                                       */
/*---------------------------------------------------------------------------*/
static struct panel_config hx8394d_p800_video_panel_data = {
	"qcom,mdss_dsi_hx8394d_p800_video", "dsi:0:", "qcom,mdss-dsi-panel",
	10, 0, "DISPLAY_1", 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1
};

/*---------------------------------------------------------------------------*/
/* Panel resolution                                                          */
/*---------------------------------------------------------------------------*/
static struct panel_resolution hx8394d_p800_video_panel_res = {
	800, 1280, 44, 55, 11, 0, 14, 15, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0
};

/*---------------------------------------------------------------------------*/
/* Panel color information                                                   */
/*---------------------------------------------------------------------------*/
static struct color_info hx8394d_p800_video_color = {
	24, 0, 0xff, 0, 0, 0
};

/*---------------------------------------------------------------------------*/
/* Panel on/off command information                                          */
/*---------------------------------------------------------------------------*/
static char hx8394d_p800_cmd1[] = {
0x04,0x00,0x39,0xC0,
0xB9,0xFF,0x83,0x94,};
static char hx8394d_p800_cmd2[] = {
0x03,0x00,0x39,0xC0,
0xBA,0x73,0x83,0xff,};
static char hx8394d_p800_cmd3[] = {
0x10,0x00,0x39,0xC0,
0xB1,0x6c,0x12,0x12,
0x24,0xe4,0x11,0xF1,
0x80,0xE4,0xd7,0x23,
0x80,0xC0,0xD2,0x58,};
static char hx8394d_p800_cmd4[] = {
0x0C,0x00,0x39,0xC0,
0xB2,0x00,0x64,0x10,
0x07,0x20,0x1C,0x08,
0x08,0x1C,0x4D,0x00,};
static char hx8394d_p800_cmd5[] = {
0x0D,0x00,0x39,0xC0,
0xB4,0x00,0xFF,0x03,
0x5a,0x03,0x5a,0x03,
0x5a,0x01,0x6a,0x01,
0x6a,0xff,0xff,0xff,};
static char hx8394d_p800_cmd6[] = {
0x1F,0x00,0x39,0xC0,
0xD3,0x00,0x06,0x00,
0x40,0x1a,0x08,0x00,
0x32,0x10,0x07,0x00,
0x07,0x54,0x15,0x0F,
0x05,0x04,0x02,0x12,
0x10,0x05,0x07,0x33,
0x33,0x0B,0x0B,0x37,
0x10,0x07,0x07,0xff,};
static char hx8394d_p800_cmd7[] = {
0x2D,0x00,0x39,0xC0,
0xD5,0x19,0x19,0x18,
0x18,0x1a,0x1a,0x1b,
0x1b,0x04,0x05,0x06,
0x07,0x00,0x01,0x02,
0x03,0x20,0x21,0x18,
0x18,0x18,0x18,0x18,
0x18,0x18,0x18,0x18,
0x18,0x18,0x18,0x22,
0x23,0x18,0x18,0x18,
0x18,0x18,0x18,0x18,
0x18,0x18,0x18,0x18,
0x18,0xff,0xff,0xff,};
static char hx8394d_p800_cmd8[] = {
0x2D,0x00,0x39,0xC0,
0xD6,0x18,0x18,0x19,
0x19,0x1A,0x1A,0x1B,
0x1B,0x03,0x02,0x01,
0x00,0x07,0x06,0x05,
0x04,0x23,0x22,0x18,
0x18,0x18,0x18,0x18,
0x18,0x18,0x18,0x18,
0x18,0x18,0x18,0x21,
0x20,0x18,0x18,0x18,
0x18,0x18,0x18,0x18,
0x18,0x18,0x18,0x18,
0x18,0xff,0xff,0xff,};
static char hx8394d_p800_cmd9[] = {
0x2B,0x00,0x39,0xC0,
0xE0,0x00,0x02,0x06,
0x21,0x25,0x3F,0x17,
0x3D,0x06,0x09,0x0C,
0x17,0x0E,0x12,0x14,
0x12,0x13,0x08,0x13,
0x16,0x18,0x00,0x02,
0x06,0x21,0x25,0x3F,
0x17,0x3D,0x06,0x09,
0x0C,0x17,0x0E,0x12,
0x14,0x12,0x13,0x08,
0x13,0x16,0x18,0xff,};
static char hx8394d_p800_cmd10[] = {
0x02,0x00,0x39,0xC0,
0xBD,0x00,0xff,0xff,};
static char hx8394d_p800_cmd11[] = {
0x2B,0x00,0x39,0xC0,
0xC1,0x01,0x00,0x03,
0x07,0x0E,0x18,0x22,
0x2C,0x35,0x3D,0x44,
0x4B,0x54,0x5C,0x64,
0x6C,0x73,0x7C,0x83,
0x8B,0x93,0x9A,0xA1,
0xA9,0xB0,0xB9,0xBF,
0xC9,0xD1,0xD8,0xE0,
0xE6,0xEF,0xF7,0x16,
0x8B,0xB4,0x57,0x10,
0xFB,0x34,0xAD,0xff,};
static char hx8394d_p800_cmd12[] = {
0x02,0x00,0x39,0xC0,
0xBD,0x01,0xff,0xff,};
static char hx8394d_p800_cmd13[] = {
0x2B,0x00,0x39,0xC0,
0xC1,0x00,0x03,0x06,
0x0D,0x16,0x1E,0x28,
0x32,0x3A,0x41,0x48,
0x4E,0x57,0x5F,0x66,
0x6D,0x75,0x7C,0x83,
0x8A,0x91,0x99,0xA1,
0xA8,0xAF,0xB5,0xBC,
0xC5,0xCD,0xD4,0xDA,
0xE3,0xE8,0x1F,0x9A,
0x51,0x06,0x26,0xF0,
0x3D,0x5E,0xC0,0xff,};
static char hx8394d_p800_cmd14[] = {
0x02,0x00,0x39,0xC0,
0xBD,0x02,0xff,0xff,};
static char hx8394d_p800_cmd15[] = {
0x2B,0x00,0x39,0xC0,
0xC1,0x00,0x03,0x07,
0x0E,0x18,0x20,0x2B,
0x34,0x3C,0x43,0x4A,
0x52,0x5A,0x62,0x69,
0x71,0x79,0x80,0x88,
0x90,0x98,0x9F,0xA6,
0xAD,0xB5,0xBC,0xC4,
0xCC,0xD4,0xDA,0xE2,
0xEA,0xF2,0x14,0x72,
0x59,0x5E,0x60,0x16,
0x6A,0x7E,0x40,0xff,};
static char hx8394d_p800_cmd16[] = {
0x03,0x00,0x39,0xC0,
0xB6,0x3A,0x3A,0xff,};
static char hx8394d_p800_cmd17[] = {
0x02,0x00,0x39,0xC0,
0xCC,0x09,0xff,0xff,};
static char hx8394d_p800_cmd18[] = {
0x02,0x00,0x39,0xC0,
0xD2,0x55,0xff,0xff,};
static char hx8394d_p800_cmd19[] = {
0x03,0x00,0x39,0xC0,
0xC0,0x30,0x14,0xff,};
static char hx8394d_p800_cmd20[] = {
0x02,0x00,0x39,0xC0,
0xBc,0x07,0xff,0xff,};
static char hx8394d_p800_cmd21[] = {
0x04,0x00,0x39,0xC0,
0xBF,0x41,0x0E,0x01,};
static char hx8394d_p800_cmd22[] = {
0x05,0x00,0x39,0xC0,
0xC7,0x00,0xC0,0x40,
0xC0,0xff,0xff,0xff,};
static char hx8394d_p800_cmd23[] = {
0x03,0x00,0x39,0xC0,
0xE4,0x02,0x01,0xff,};
static char hx8394d_p800_cmd24[] = {
0x02,0x00,0x39,0xC0,
0xDF,0x8E,0xff,0xff,};

static char hx8394d_p800_exit_sleep[] = {
	0x11,0x00,0x05,0x80};
static char hx8394d_p800_display_on[] = {
	0x29,0x00,0x05,0x80};

static struct mipi_dsi_cmd hx8394d_p800_video_on_command[] = {

{ARRAY_SIZE(hx8394d_p800_cmd1), hx8394d_p800_cmd1, 0x00},
{ARRAY_SIZE(hx8394d_p800_cmd2), hx8394d_p800_cmd2, 0x00},
{ARRAY_SIZE(hx8394d_p800_cmd3), hx8394d_p800_cmd3, 0x00},
{ARRAY_SIZE(hx8394d_p800_cmd4), hx8394d_p800_cmd4, 0x00},
{ARRAY_SIZE(hx8394d_p800_cmd5), hx8394d_p800_cmd5, 0x00},
{ARRAY_SIZE(hx8394d_p800_cmd6), hx8394d_p800_cmd6, 0x00},
{ARRAY_SIZE(hx8394d_p800_cmd7), hx8394d_p800_cmd7, 0x00},
{ARRAY_SIZE(hx8394d_p800_cmd8), hx8394d_p800_cmd8, 0x00},
{ARRAY_SIZE(hx8394d_p800_cmd9), hx8394d_p800_cmd9, 0x00},
{ARRAY_SIZE(hx8394d_p800_cmd10), hx8394d_p800_cmd10, 0x00},
{ARRAY_SIZE(hx8394d_p800_cmd11), hx8394d_p800_cmd11, 0x00},
{ARRAY_SIZE(hx8394d_p800_cmd12), hx8394d_p800_cmd12, 0x00},
{ARRAY_SIZE(hx8394d_p800_cmd13), hx8394d_p800_cmd13, 0x00},
{ARRAY_SIZE(hx8394d_p800_cmd14), hx8394d_p800_cmd14, 0x00},
{ARRAY_SIZE(hx8394d_p800_cmd15), hx8394d_p800_cmd15, 0x00},
{ARRAY_SIZE(hx8394d_p800_cmd16), hx8394d_p800_cmd16, 0x00},
{ARRAY_SIZE(hx8394d_p800_cmd17), hx8394d_p800_cmd17, 0x00},
{ARRAY_SIZE(hx8394d_p800_cmd18), hx8394d_p800_cmd18, 0x00},
{ARRAY_SIZE(hx8394d_p800_cmd19), hx8394d_p800_cmd19, 0x00},
{ARRAY_SIZE(hx8394d_p800_cmd20), hx8394d_p800_cmd20, 0x00},
{ARRAY_SIZE(hx8394d_p800_cmd21), hx8394d_p800_cmd21, 0x00},
{ARRAY_SIZE(hx8394d_p800_cmd22), hx8394d_p800_cmd22, 0x00},
{ARRAY_SIZE(hx8394d_p800_cmd23), hx8394d_p800_cmd23, 0x00},
{ARRAY_SIZE(hx8394d_p800_cmd24), hx8394d_p800_cmd24, 0x00},
{ARRAY_SIZE(hx8394d_p800_exit_sleep), hx8394d_p800_exit_sleep, 0x96},
{ARRAY_SIZE(hx8394d_p800_display_on), hx8394d_p800_display_on, 0x14},
};

#define HX8394D_P800_VIDEO_ON_COMMAND 122


static char hx8394d_p800_videooff_cmd0[] = {
	0x28, 0x00, 0x05, 0x80
};

static char hx8394d_p800_videooff_cmd1[] = {
	0x10, 0x00, 0x05, 0x80
};

static struct mipi_dsi_cmd hx8394d_p800_video_off_command[] = {
	{0x4, hx8394d_p800_videooff_cmd0, 0x00},
	{0x4, hx8394d_p800_videooff_cmd1, 0x78}
};

#define HX8394D_P800_VIDEO_OFF_COMMAND 2


static struct command_state hx8394d_p800_video_state = {
	0, 1
};

/*---------------------------------------------------------------------------*/
/* Command mode panel information                                            */
/*---------------------------------------------------------------------------*/
static struct commandpanel_info hx8394d_p800_video_command_panel = {
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
};

/*---------------------------------------------------------------------------*/
/* Video mode panel information                                              */
/*---------------------------------------------------------------------------*/
static struct videopanel_info hx8394d_p800_video_video_panel = {
	1, 0, 0, 0, 1, 1, 2, 0, 0x9
};

/*---------------------------------------------------------------------------*/
/* Lane configuration                                                        */
/*---------------------------------------------------------------------------*/
static struct lane_configuration hx8394d_p800_video_lane_config = {
	4, 0, 1, 1, 1, 1
};

/*---------------------------------------------------------------------------*/
/* Panel timing                                                              */
/*---------------------------------------------------------------------------*/
static const uint32_t hx8394d_p800_video_timings[] = {
	//0x8A, 0x1A, 0x12, 0x00, 0x3E, 0x42, 0x16, 0x1E, 0x14, 0x03, 0x04, 0x00
 	//0x7A, 0x1A, 0x12, 0x00, 0x3E, 0x42, 0x16, 0x1E, 0x14, 0x03, 0x04, 0x00
// 	0x7e, 0x1A, 0x10, 0x00, 0x3c, 0x40, 0x14, 0x1c, 0x12, 0x03, 0x04, 0x00
	0x93, 0x1F, 0x17, 0x00, 0x2F, 0x2E, 0x1C, 0x21, 0x26, 0x03, 0x04, 0x00
 	//0x9e, 0x43, 0x37, 0x00, 0x60, 0x58, 0x39, 0x45, 0x5b, 0x03, 0x04,0x00
};

static struct panel_timing hx8394d_p800_video_timing_info = {
	0, 4, 0x20, 0x2D
};

/*---------------------------------------------------------------------------*/
/* Panel reset sequence                                                      */
/*---------------------------------------------------------------------------*/
static struct panel_reset_sequence hx8394d_p800_video_reset_seq = {
	{1, 0, 1, }, {10, 50, 50, }, 2
};

/*---------------------------------------------------------------------------*/
/* Backlight setting                                                         */
/*---------------------------------------------------------------------------*/
static struct backlight hx8394d_p800_video_backlight = {
	0, 1, 255, 0, 0, 0
};

#endif /*_PANEL_HX8394D_P800_VIDEO_H_*/
