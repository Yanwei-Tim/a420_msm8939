/* Copyright (c) 2014-2015, The Linux Foundation. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *  * Neither the name of The Linux Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
 * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*---------------------------------------------------------------------------
 * This file is autogenerated file using gcdb parser. Please do not edit it.
 * Update input XML file to add a new entry or update variable in this file
 * VERSION = "1.0"
 *---------------------------------------------------------------------------*/

#ifndef _PANEL_HX8394F_A420_720P_VIDEO_H_

#define _PANEL_HX8394F_A420_720P_VIDEO_H_
/*---------------------------------------------------------------------------*/
/* HEADER files                                                              */
/*---------------------------------------------------------------------------*/
#include "panel.h"

/*---------------------------------------------------------------------------*/
/* Panel configuration                                                       */
/*---------------------------------------------------------------------------*/

static struct panel_config hx8394f_a420_720p_video_panel_data = {
  "qcom,mdss_dsi_hx8394f_a420_720p_video", "dsi:0:", "qcom,mdss-dsi-panel",
  10, 0, "DISPLAY_1", 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
};

/*---------------------------------------------------------------------------*/
/* Panel resolution                                                          */
/*---------------------------------------------------------------------------*/
static struct panel_resolution hx8394f_a420_720p_video_panel_res = {
 720, 1280, 54, 12, 30, 0, 8, 12, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0
};

/*---------------------------------------------------------------------------*/
/* Panel Color Information                                                   */
/*---------------------------------------------------------------------------*/
static struct color_info hx8394f_a420_720p_video_color = {
  24, 0, 0xff, 0, 0, 0
};

/*---------------------------------------------------------------------------*/
/* Panel Command information                                                 */
/*---------------------------------------------------------------------------*/
static char hx8394f_a420_720p_video_on_cmd1[] = {
	0x04, 0x00, 0x39, 0xc0, 
	0xB9, 0xFF, 0x83, 0x94,
};				
static char hx8394f_a420_720p_video_on_cmd2[] = {
	0x07, 0x00, 0x39, 0xc0, 
	0xBA, 0x63, 0x03, 0x68, 
	0x6B, 0xB2, 0xC0, 0xff,
};		
static char hx8394f_a420_720p_video_on_cmd3[] = {
	0x0b, 0x00, 0x39, 0xc0, 
	0xB1, 0x48, 0x05, 0x65, 
	0x09, 0x33, 0x54, 0x71, 
	0x71, 0x2e, 0x45, 0xff,
};		       
static char hx8394f_a420_720p_video_on_cmd4[] = {
	0x02, 0x00, 0x39, 0xc0, 
	0xCC, 0x0b, 0xff, 0xff,
}; 		
static char hx8394f_a420_720p_video_on_cmd5[] = {
	0x04, 0x00, 0x39, 0xc0, 
	0xB6, 0x38, 0x38, 0x00,
};		       
static char hx8394f_a420_720p_video_on_cmd6[] = {
	0x3b, 0x00, 0x39, 0xc0, 
	0xE0, 0x00, 0x05, 0x0C,
	0x11, 0x15, 0x18, 0x1D,
	0x1D, 0x42, 0x53, 0x69,
	0x6D, 0x7C, 0x91, 0x9A,
	0x9F, 0xAE, 0xB4, 0xB6,
	0xC2, 0xD5, 0x61, 0x5F,
	0x60, 0x65, 0x67, 0x70,
	0x76, 0x7F, 0x00, 0x05,
	0x0C, 0x11, 0x15, 0x18,
	0x1D, 0x1D, 0x42, 0x53,
	0x69, 0x6D, 0x7C, 0x91,
	0x9A, 0x9F, 0xAE, 0xB4,
	0xB6, 0xC2, 0xD5, 0x61,
	0x5F, 0x60, 0x65, 0x67,
	0x70, 0x76, 0x7F, 0xff,
}; 
static char hx8394f_a420_720p_video_on_cmd7[] = {
	0x02, 0x00, 0x39, 0xc0, 
	0xd2, 0x66, 0xff, 0xff,
};	
static char hx8394f_a420_720p_video_on_cmd8[] = {
	0x07, 0x00, 0x39, 0xc0, 
	0xB2, 0x00, 0x80, 0x64, 
	0x0C, 0x06, 0x2F, 0xff, 
};			
static char hx8394f_a420_720p_video_on_cmd9[] = {
	0x17, 0x00, 0x39, 0xc0, 
	0xB4, 0x1C, 0x78, 0x1C, 
	0x78, 0x1C, 0x78, 0x01, 
	0x0C, 0x86, 0x35, 0x00, 
	0x3F, 0x1C, 0x78, 0x1C, 
	0x78, 0x1C, 0x78, 0x01, 
	0x0C, 0x86, 0x3F, 0xff,	
};	
static char hx8394f_a420_720p_video_on_cmd10[] = {
	0x2c, 0x00, 0x39, 0xc0, 
	0xD3, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x08, 
	0x08, 0x32, 0x10, 0x05, 
	0x00, 0x05, 0x32, 0x13, 
	0xC1, 0x00, 0x01, 0x32, 
	0x10, 0x08, 0x00, 0x00, 
	0x37, 0x03, 0x07, 0x07, 
	0x37, 0x05, 0x05, 0x37, 
	0x0C, 0x40, 0x00, 0x07, 
	0x13, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x07, 0x13,
};	
static char hx8394f_a420_720p_video_on_cmd11[] = {
	0x2d, 0x00, 0x39, 0xc0, 
	0xD5, 0x39, 0x39, 0x18, 
	0x18, 0x22, 0x23, 0x20, 
	0x21, 0x04, 0x05, 0x04, 
	0x05, 0x06, 0x07, 0x06, 
	0x07, 0x18, 0x18, 0x18, 
	0x18, 0x00, 0x01, 0x00, 
	0x01, 0x18, 0x18, 0x02, 
	0x03, 0x02, 0x03, 0x38, 
	0x38, 0x19, 0x19, 0x18, 
	0x18, 0x18, 0x18, 0x18, 
	0x18, 0x18, 0x18, 0x18, 
	0x18, 0xff, 0xff, 0xff,			
};					
static char hx8394f_a420_720p_video_on_cmd12[] = {
	0x2d, 0x00, 0x39, 0xc0, 
	0xD6, 0x39, 0x39, 0x19, 
	0x19, 0x21, 0x20, 0x23, 
	0x22, 0x03, 0x02, 0x03, 
	0x02, 0x01, 0x00, 0x01, 
	0x00, 0x18, 0x18, 0x18, 
	0x18, 0x07, 0x06, 0x07, 
	0x06, 0x18, 0x18, 0x05, 
	0x04, 0x05, 0x04, 0x38, 
	0x38, 0x18, 0x18, 0x18, 
	0x18, 0x18, 0x18, 0x18, 
	0x18, 0x18, 0x18, 0x18, 
	0x18, 0xff, 0xff, 0xff,				
};	
static char hx8394f_a420_720p_video_on_cmd13[] = {
	0x03, 0x00, 0x39, 0xc0, 
	0xC0, 0x1F, 0x31, 0xff,
};  				
static char hx8394f_a420_720p_video_on_cmd14[] = {
	0x02, 0x00, 0x39, 0xc0, 
	0xD4, 0x02, 0xff, 0xff, 
};			
static char hx8394f_a420_720p_video_on_cmd15[] = {
	0x02, 0x00, 0x39, 0xc0, 
	0xBD, 0x01, 0xff, 0xff,
};		
static char hx8394f_a420_720p_video_on_cmd16[] = {
	0x02, 0x00, 0x39, 0xc0, 
	0xB1, 0x00, 0xff, 0xff,
}; 		
static char hx8394f_a420_720p_video_on_cmd17[] = {
	0x02, 0x00, 0x39, 0xc0, 
	0xBD, 0x00, 0xff, 0xff,
};	

static char hx8394f_a420_720p_video_on_cmd18[] = {
	0x08, 0x00, 0x39, 0xc0, 
	0xBF, 0x40, 0x81, 0x50, 
	0x02, 0x1A, 0xFC, 0x02,
};	

static char hx8394f_a420_720p_video_on_exit_sleep[] = {
	0x11,0x00,0x05,0x80};

static char hx8394f_a420_720p_video_on_display_on[] = {
	0x29,0x00,0x05,0x80};

static struct mipi_dsi_cmd hx8394f_a420_720p_video_on_command[] = {
	{ARRAY_SIZE(hx8394f_a420_720p_video_on_cmd1), hx8394f_a420_720p_video_on_cmd1, 0x00},
	{ARRAY_SIZE(hx8394f_a420_720p_video_on_cmd2), hx8394f_a420_720p_video_on_cmd2, 0x00},
	{ARRAY_SIZE(hx8394f_a420_720p_video_on_cmd3), hx8394f_a420_720p_video_on_cmd3, 0x00},
	{ARRAY_SIZE(hx8394f_a420_720p_video_on_cmd4), hx8394f_a420_720p_video_on_cmd4, 0x00},
	{ARRAY_SIZE(hx8394f_a420_720p_video_on_cmd5), hx8394f_a420_720p_video_on_cmd5, 0x00},
	{ARRAY_SIZE(hx8394f_a420_720p_video_on_cmd6), hx8394f_a420_720p_video_on_cmd6, 0x00},
	{ARRAY_SIZE(hx8394f_a420_720p_video_on_cmd7), hx8394f_a420_720p_video_on_cmd7, 0x00},
	{ARRAY_SIZE(hx8394f_a420_720p_video_on_cmd8), hx8394f_a420_720p_video_on_cmd8, 0x00},
	{ARRAY_SIZE(hx8394f_a420_720p_video_on_cmd9), hx8394f_a420_720p_video_on_cmd9, 0x00},
	{ARRAY_SIZE(hx8394f_a420_720p_video_on_cmd10), hx8394f_a420_720p_video_on_cmd10, 0x00},
	{ARRAY_SIZE(hx8394f_a420_720p_video_on_cmd11), hx8394f_a420_720p_video_on_cmd11, 0x00},
	{ARRAY_SIZE(hx8394f_a420_720p_video_on_cmd12), hx8394f_a420_720p_video_on_cmd12, 0x00},
	{ARRAY_SIZE(hx8394f_a420_720p_video_on_cmd13), hx8394f_a420_720p_video_on_cmd13, 0x00},
	{ARRAY_SIZE(hx8394f_a420_720p_video_on_cmd14), hx8394f_a420_720p_video_on_cmd14, 0x00},
	{ARRAY_SIZE(hx8394f_a420_720p_video_on_cmd15), hx8394f_a420_720p_video_on_cmd15, 0x00},
	{ARRAY_SIZE(hx8394f_a420_720p_video_on_cmd16), hx8394f_a420_720p_video_on_cmd16, 0x00},
	{ARRAY_SIZE(hx8394f_a420_720p_video_on_cmd17), hx8394f_a420_720p_video_on_cmd17, 0x00},	
	{ARRAY_SIZE(hx8394f_a420_720p_video_on_cmd18), hx8394f_a420_720p_video_on_cmd18, 0x00},
	{ARRAY_SIZE(hx8394f_a420_720p_video_on_exit_sleep), hx8394f_a420_720p_video_on_exit_sleep, 0x78},
	{ARRAY_SIZE(hx8394f_a420_720p_video_on_display_on), hx8394f_a420_720p_video_on_display_on, 0x14},
};

#define HX8394F_A420_720P_VIDEO_ON_COMMAND 122

static char hx8394f_a420_720P_videooff_cmd0[] = {
	0x28, 0x00, 0x05, 0x80
};

static char hx8394f_a420_720P_videooff_cmd1[] = {
	0x10, 0x00, 0x05, 0x80
};

static struct mipi_dsi_cmd hx8394f_a420_720P_video_off_command[] = {
	{0x4, hx8394f_a420_720P_videooff_cmd0,0x00},
	{0x4, hx8394f_a420_720P_videooff_cmd1,0x78}
};

#define HX8394F_A420_720P_VIDEO_OFF_COMMAND 2

static struct command_state hx8394f_a420_720p_video_state = {
  0, 1
};

/*---------------------------------------------------------------------------*/
/* Command mode panel information                                            */
/*---------------------------------------------------------------------------*/

static struct commandpanel_info hx8394f_a420_720p_video_command_panel = {
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
};

/*---------------------------------------------------------------------------*/
/* Video mode panel information                                              */
/*---------------------------------------------------------------------------*/

static struct videopanel_info hx8394f_a420_720p_video_video_panel = {
  1, 0, 0, 0, 1, 1, 2, 0, 0x9
};

/*---------------------------------------------------------------------------*/
/* Lane Configuration                                                        */
/*---------------------------------------------------------------------------*/

static struct lane_configuration hx8394f_a420_720p_video_lane_config = {
  4, 0, 1, 1, 1, 1, 
};

/*---------------------------------------------------------------------------*/
/* Panel Timing                                                              */
/*---------------------------------------------------------------------------*/
const uint32_t hx8394f_a420_720p_video_timings[] = {
  0x76, 0x1A, 0x11, 0x00, 0x3D, 0x44, 0x15, 0x1D, 0x1D, 0x03, 0x04, 0x00
};

static struct panel_timing hx8394f_a420_720p_video_timing_info = {
  0, 4, 0x20, 0x2f
};

static struct panel_reset_sequence hx8394f_a420_720p_video_panel_reset_seq = {
{ 1, 0, 1, }, { 1, 50, 50, }, 2
};

/*---------------------------------------------------------------------------*/
/* Backlight Settings                                                        */
/*---------------------------------------------------------------------------*/

static struct backlight hx8394f_a420_720p_video_backlight = {
  0, 1, 255, 0, 0, 0
};

#endif /*_HX8394F_A420_720P_VIDEO_H_*/

