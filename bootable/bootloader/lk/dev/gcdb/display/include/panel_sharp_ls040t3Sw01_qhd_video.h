/* Copyright (c) 2013, The Linux Foundation. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *  * Neither the name of The Linux Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
 * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*---------------------------------------------------------------------------
 * This file is autogenerated file using gcdb parser. Please do not edit it.
 * Update input XML file to add a new entry or update variable in this file
 * VERSION = "1.0"
 *---------------------------------------------------------------------------*/

#ifndef _PANEL_SHARP_LS040T3SW01_QHD_VIDEO_H_

#define _PANEL_SHARP_LS040T3SW01_QHD_VIDEO_H_
/*---------------------------------------------------------------------------*/
/* HEADER files                                                              */
/*---------------------------------------------------------------------------*/
#include "panel.h"

/*---------------------------------------------------------------------------*/
/* Panel configuration                                                       */
/*---------------------------------------------------------------------------*/

static struct panel_config sharp_ls040t3Sw01_qhd_video_panel_data = {
  //"qcom,mdss_dsi_sharp_ls040t3Sw01_qhd_video", "dsi:0:", "qcom,mdss-dsi-panel",
  "qcom,mdss_dsi_sharp_ls040t3Sw01_video", "dsi:0:", "qcom,mdss-dsi-panel",
	10, 0, "DISPLAY_1", 0, 0, 60, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0
};

/*---------------------------------------------------------------------------*/
/* Panel resolution                                                          */
/*---------------------------------------------------------------------------*/
static struct panel_resolution sharp_ls040t3Sw01_qhd_video_panel_res = {
  540, 960, 20, 16, 10, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0
};

/*---------------------------------------------------------------------------*/
/* Panel Color Information                                                   */
/*---------------------------------------------------------------------------*/
static struct color_info sharp_ls040t3Sw01_qhd_video_color = {
  24, 0, 0xff, 0, 0, 0
};

/*---------------------------------------------------------------------------*/
/* Panel Command information                                                 */
/*---------------------------------------------------------------------------*/

/********************************************************************************
*       ic=sharp; glass=ls040t3Sw01; module=ls040t3Sw01; size=3.97; qhd; 480x800         *
*********************************************************************************/
static char sharp_ls040t3Sw01_cmd1[] = {
    0x02, 0x00, 0x29, 0xC0,
    0x36, 0x03, 0xff, 0xff,
};

static char sharp_ls040t3Sw01_hs_qhd_video_on_exit_sleep[] = {
	0x11,0x00,0x05,0x80};

static char sharp_ls040t3Sw01_hs_qhd_video_on_display_on[] = {
	0x29,0x00,0x05,0x80};

static struct mipi_dsi_cmd sharp_ls040t3Sw01_qhd_video_on_command[] = {
	{ARRAY_SIZE(sharp_ls040t3Sw01_cmd1), sharp_ls040t3Sw01_cmd1, 0x00},
	{ARRAY_SIZE(sharp_ls040t3Sw01_hs_qhd_video_on_exit_sleep), sharp_ls040t3Sw01_hs_qhd_video_on_exit_sleep, 0xDC},
	{ARRAY_SIZE(sharp_ls040t3Sw01_hs_qhd_video_on_display_on), sharp_ls040t3Sw01_hs_qhd_video_on_display_on, 0x0A},
};

#define SHARP_LS040T3SW01_QHD_VIDEO_ON_COMMAND (sizeof(sharp_ls040t3Sw01_qhd_video_on_command)/sizeof(struct mipi_dsi_cmd))

static char sharp_ls040t3Sw01_qhd_videooff_cmd0[] = {
0x28, 0x00, 0x05, 0x80 };


static char sharp_ls040t3Sw01_qhd_videooff_cmd1[] = {
0x10, 0x00, 0x05, 0x80 };


static char sharp_ls040t3Sw01_qhd_videooff_cmd2[] = {
0x02,0x00,0x39,0xC0,
0x70,0x01,0xff,0xff,
};

static struct mipi_dsi_cmd sharp_ls040t3Sw01_qhd_video_off_command[] = {
{ 0x4 , sharp_ls040t3Sw01_qhd_videooff_cmd0},
{ 0x4 , sharp_ls040t3Sw01_qhd_videooff_cmd1},
{ ARRAY_SIZE(sharp_ls040t3Sw01_qhd_videooff_cmd2) , sharp_ls040t3Sw01_qhd_videooff_cmd2},

};
#define SHARP_LS040T3SW01_QHD_VIDEO_OFF_COMMAND 3


static struct command_state sharp_ls040t3Sw01_qhd_video_state = {
	0, 0
};

/*---------------------------------------------------------------------------*/
/* Command mode panel information                                            */
/*---------------------------------------------------------------------------*/

static struct commandpanel_info sharp_ls040t3Sw01_qhd_video_command_panel = {
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
};

/*---------------------------------------------------------------------------*/
/* Video mode panel information                                              */
/*---------------------------------------------------------------------------*/

static struct videopanel_info sharp_ls040t3Sw01_qhd_video_video_panel = {
	1, 0, 0, 0, 1, 1, 2, 0, 0x9
};

/*---------------------------------------------------------------------------*/
/* Lane Configuration                                                        */
/*---------------------------------------------------------------------------*/

static struct lane_configuration sharp_ls040t3Sw01_qhd_video_lane_config = {
  2, 0, 1, 1, 0, 0
};


/*---------------------------------------------------------------------------*/
/* Panel Timing                                                              */
/*---------------------------------------------------------------------------*/
static const uint32_t sharp_ls040t3Sw01_qhd_video_timings[] = {
	//0x8C, 0x1E, 0x14, 0x00, 0x44, 0x4A, 0x18, 0x22, 0x18, 0x03, 0x04, 0x00
	//0x6F, 0x18, 0x10, 0x00, 0x3A, 0x3F, 0x14, 0x1B, 0x1B, 0x03, 0x04, 0x00  //380MH
	0x45, 0x0C, 0x08, 0x00, 0x2A, 0x35, 0x0C, 0x10, 0x0D, 0x03, 0x04, 0x00
};

static struct panel_timing sharp_ls040t3Sw01_qhd_video_timing_info = {
	0, 4, 0x1f, 0x2d
};

/*---------------------------------------------------------------------------*/
/* Panel Reset Sequence                                                      */
/*---------------------------------------------------------------------------*/
static struct panel_reset_sequence sharp_ls040t3Sw01_qhd_video_reset_seq = {
  { 1, 0, 1, }, { 10, 20, 200, }, 2
};

/*---------------------------------------------------------------------------*/
/* Backlight Settings                                                        */
/*---------------------------------------------------------------------------*/

static struct backlight sharp_ls040t3Sw01_qhd_video_backlight = {
  0, 1, 255, 0, 1, 0
};


#endif /*_PANEL_SHARP_LS040T3SW01_QHD_VIDEO_H_*/
